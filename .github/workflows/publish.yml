name: Publish Release

on:
  release:
    types: [published]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ['10', '12', '14', '15']
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}
      - run: npm ci
      - run: npm run lint
      - run: npm test


  publish-npm:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 14
          registry-url: https://registry.npmjs.org/
      - run: npm ci
      - run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{secrets.npm_token}}
  
  
  publish-docker:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: docker/setup-qemu-action@v1
      - uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.dockerhub_username }}
          password: ${{ secrets.dockerhub_token }}
      
      - name: Parse SemVer
        id: semver
        uses: booxmedialtd/ws-action-parse-semver@v1
        with:
          input_string: ${{ github.event.release.name }}
          version_extractor_regex: '^v(.*)$'
      
      - name: Prep tags
        id: prep
        run: |
          DOCKER_IMAGE=nicomt/ckron
          TAGS=${DOCKER_IMAGE}:${{steps.semver.outputs.fullversion}}
          TAGS=${TAGS},${DOCKER_IMAGE}:${{steps.semver.outputs.major}}
          TAGS=${TAGS},${DOCKER_IMAGE}:${{steps.semver.outputs.major}}.${{steps.semver.outputs.minor}}
          
          if [[ -z "${{steps.semver.outputs.prerelease}}" ]]; then
            TAGS=${TAGS},${DOCKER_IMAGE}:latest
          else
            TAGS=${TAGS},${DOCKER_IMAGE}:${{steps.semver.outputs.prerelease}}
          fi
          echo ::set-output name=tags::${TAGS}
          echo ::set-output name=created::$(date -u +'%Y-%m-%dT%H:%M:%SZ')
          
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64/v8,linux/ppc64le,linux/s390x
          push: true
          tags: ${{ steps.prep.outputs.tags }}
          labels: |
            org.opencontainers.image.title=${{ github.event.repository.name }}
            org.opencontainers.image.description=${{ github.event.repository.description }}
            org.opencontainers.image.url=${{ github.event.repository.html_url }}
            org.opencontainers.image.source=${{ github.event.repository.clone_url }}
            org.opencontainers.image.version=${{ steps.semver.outputs.fullversion }}
            org.opencontainers.image.created=${{ steps.prep.outputs.created }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.licenses=${{ github.event.repository.license.spdx_id }}
            

